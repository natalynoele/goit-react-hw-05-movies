{"version":3,"file":"static/js/309.6d467bd5.chunk.js","mappings":"8LA0CA,UArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAQ,iBAAaF,EAAb,YACd,GAA8BG,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUL,GAAUM,MAAK,SAAAC,GAAQ,OAAIJ,EAAWI,EAASC,QAAxB,GACnC,IAEA,IAAMC,EAAcP,EAChBA,EAAQQ,KAAI,YAA0C,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,QAAqBC,GAAS,EAArBC,WAAqB,EAATD,IAC1C,OACE,gBAAaE,UAAU,eAAvB,WACE,wBACE,uBAAIJ,OAEN,uBAAIC,MAJGC,EAOZ,IACD,GAEJ,OAAIJ,EAAYO,OAAS,GAErB,iCACE,eAAID,UAAU,aAAd,+BACA,eAAIA,UAAU,eAAd,SAA8BN,QAI3B,kEAEV,C","sources":["pages/reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport getMovies from 'service/getMovies';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const endpoint = `/movie/${movieId}/reviews`;\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    getMovies(endpoint).then(response => setReviews(response.results));\n });\n\n  const reviewsList = reviews\n    ? reviews.map(({ author, content, created_at, id }) => {\n        return (\n          <li key={id} className='reviews-item'>\n            <p>\n              <b>{author}</b>\n            </p>\n            <p>{content}</p>\n          </li>\n        );\n      })\n    : [];\n  \n  if (reviewsList.length > 0) {\n    return (\n      <>\n        <h2 className='page-title'>Audience reviews</h2>\n        <ul className='reviews-list'>{reviewsList}</ul>\n      </>\n    );\n  } else {\n    return <p>There are no reviews for this film yet </p>;\n  }\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(PropTypes.shape)\n}\nexport default Reviews;\n"],"names":["movieId","useParams","endpoint","useState","reviews","setReviews","useEffect","getMovies","then","response","results","reviewsList","map","author","content","id","created_at","className","length"],"sourceRoot":""}